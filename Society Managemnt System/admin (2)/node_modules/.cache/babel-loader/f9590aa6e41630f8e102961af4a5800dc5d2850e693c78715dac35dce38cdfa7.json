{"ast":null,"code":"var _jsxFileName = \"/home/vedant/SYSTUM/project 2/Society Managemnt System/admin (2)/src/ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n// Example of a fake authentication function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  // You can implement your own authentication logic here\n  // For example, check if a token exists in local storage or cookies\n  // Return true if authenticated, false otherwise\n  return localStorage.getItem('token') !== null;\n};\n\n// Higher-order component for protecting routes\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => isAuthenticated() ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Redirect","jsxDEV","_jsxDEV","isAuthenticated","localStorage","getItem","ProtectedRoute","component","Component","rest","render","props","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/vedant/SYSTUM/project 2/Society Managemnt System/admin (2)/src/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n// Example of a fake authentication function\nconst isAuthenticated = () => {\n  // You can implement your own authentication logic here\n  // For example, check if a token exists in local storage or cookies\n  // Return true if authenticated, false otherwise\n  return localStorage.getItem('token') !== null;\n};\n\n// Higher-order component for protecting routes\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuthenticated() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B;EACA;EACA;EACA,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI;AAC/C,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAC5D,oBACEP,OAAA,CAACH,KAAK;IAAA,GACAU,IAAI;IACRC,MAAM,EAAGC,KAAK,IACZR,eAAe,CAAC,CAAC,gBACfD,OAAA,CAACM,SAAS;MAAA,GAAKG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAExBb,OAAA,CAACF,QAAQ;MAACgB,EAAE,EAAC;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAErB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN,CAAC;AAACE,EAAA,GAbIX,cAAc;AAepB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}