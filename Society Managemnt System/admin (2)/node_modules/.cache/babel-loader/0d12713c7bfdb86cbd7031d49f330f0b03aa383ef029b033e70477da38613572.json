{"ast":null,"code":"var _jsxFileName = \"/home/vedant/SYSTUM/project 2/admin (2)/src/pages/forms/login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport './login.css'; // Import CSS file for styling\nimport Topbar from '../../components/topbar/Topbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const [role, setRole] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // State to control loading splash screen\n  const history = useHistory();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleAdminLogin = async () => {\n    setIsLoading(true); // Show loading splash screen\n    try {\n      // Make Axios request specific to admin login\n      const response = await axios.post('http://localhost:9898/admin/login', credentials);\n      const token = response.data.data.token; // Extract token from response\n      localStorage.setItem('token', token); // Store token in local storage\n      console.log('Admin Login response:', response.data);\n      history.push('/adminDashboard');\n    } catch (error) {\n      console.error('Admin Login error:', error);\n      // Handle error\n    } finally {\n      setIsLoading(false); // Hide loading splash screen regardless of success or failure\n    }\n  };\n\n  // Similar implementations for handleOwnerLogin and handleSecretaryLogin...\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (role === 'admin') {\n      await handleAdminLogin();\n    } else if (role === 'owner') {\n      await handleOwnerLogin();\n    } else if (role === 'secretary') {\n      await handleSecretaryLogin();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-screen\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"login-form-h1\",\n      children: \"Login Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-btn-submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"0M3pFAfjAo6Cp4DcDv6iBbYeL3I=\", false, function () {\n  return [useHistory];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useHistory","axios","Topbar","jsxDEV","_jsxDEV","LoginForm","_s","credentials","setCredentials","email","password","role","setRole","isLoading","setIsLoading","history","handleChange","e","name","value","target","prevState","handleAdminLogin","response","post","token","data","localStorage","setItem","console","log","push","error","handleSubmit","event","preventDefault","handleOwnerLogin","handleSecretaryLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","_c","$RefreshReg$"],"sources":["/home/vedant/SYSTUM/project 2/admin (2)/src/pages/forms/login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport './login.css'; // Import CSS file for styling\nimport Topbar from '../../components/topbar/Topbar';\n\nconst LoginForm = () => {\n    const [credentials, setCredentials] = useState({ email: '', password: '' });\n    const [role, setRole] = useState('');\n    const [isLoading, setIsLoading] = useState(false); // State to control loading splash screen\n    const history = useHistory();\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setCredentials(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    };\n\n    const handleAdminLogin = async () => {\n        setIsLoading(true); // Show loading splash screen\n        try {\n            // Make Axios request specific to admin login\n            const response = await axios.post('http://localhost:9898/admin/login', credentials);\n            const token = response.data.data.token; // Extract token from response\n            localStorage.setItem('token', token); // Store token in local storage\n            console.log('Admin Login response:', response.data);\n            history.push('/adminDashboard');\n        } catch (error) {\n            console.error('Admin Login error:', error);\n            // Handle error\n        } finally {\n            setIsLoading(false); // Hide loading splash screen regardless of success or failure\n        }\n    };\n\n    // Similar implementations for handleOwnerLogin and handleSecretaryLogin...\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (role === 'admin') {\n            await handleAdminLogin();\n        } else if (role === 'owner') {\n            await handleOwnerLogin();\n        } else if (role === 'secretary') {\n            await handleSecretaryLogin();\n        }\n    };\n\n    return (\n        <div className=\"login-container\">\n            {isLoading && <div className=\"loading-screen\">Loading...</div>} {/* Loading splash screen */}\n            <h1 className=\"login-form-h1\">Login Form</h1>\n            <form onSubmit={handleSubmit} className=\"login-form\">\n                {/* Form inputs and controls */}\n                <button type=\"submit\" className=\"login-btn-submit\">Login</button>\n            </form>\n        </div>\n    );\n};\n\nexport default LoginForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa,CAAC,CAAC;AACtB,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC;IAAEU,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC3E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAMgB,OAAO,GAAGf,UAAU,CAAC,CAAC;EAE5B,MAAMgB,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCZ,cAAc,CAACa,SAAS,KAAK;MACzB,GAAGA,SAAS;MACZ,CAACH,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjCR,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,IAAI;MACA;MACA,MAAMS,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAAC,mCAAmC,EAAEjB,WAAW,CAAC;MACnF,MAAMkB,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACD,KAAK,CAAC,CAAC;MACxCE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC,CAAC,CAAC;MACtCI,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEP,QAAQ,CAACG,IAAI,CAAC;MACnDX,OAAO,CAACgB,IAAI,CAAC,iBAAiB,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C;IACJ,CAAC,SAAS;MACNlB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB;EACJ,CAAC;;EAED;;EAEA,MAAMmB,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAIxB,IAAI,KAAK,OAAO,EAAE;MAClB,MAAMW,gBAAgB,CAAC,CAAC;IAC5B,CAAC,MAAM,IAAIX,IAAI,KAAK,OAAO,EAAE;MACzB,MAAMyB,gBAAgB,CAAC,CAAC;IAC5B,CAAC,MAAM,IAAIzB,IAAI,KAAK,WAAW,EAAE;MAC7B,MAAM0B,oBAAoB,CAAC,CAAC;IAChC;EACJ,CAAC;EAED,oBACIjC,OAAA;IAAKkC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,GAC3B1B,SAAS,iBAAIT,OAAA;MAAKkC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAAC,GAAC,eAChEvC,OAAA;MAAIkC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CvC,OAAA;MAAMwC,QAAQ,EAAEX,YAAa;MAACK,SAAS,EAAC,YAAY;MAAAC,QAAA,eAEhDnC,OAAA;QAAQyC,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACrC,EAAA,CAvDID,SAAS;EAAA,QAIKL,UAAU;AAAA;AAAA8C,EAAA,GAJxBzC,SAAS;AAyDf,eAAeA,SAAS;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}