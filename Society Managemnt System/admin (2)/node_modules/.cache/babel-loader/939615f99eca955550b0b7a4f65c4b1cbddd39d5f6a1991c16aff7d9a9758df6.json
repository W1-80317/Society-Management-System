{"ast":null,"code":"var _jsxFileName = \"/home/vedant/SYSTUM/project 2/Society Managemnt System/admin (2)/src/pages/table/announcementTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './announcementTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnnouncementsTable = () => {\n  _s();\n  const [announcements, setAnnouncements] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch announcements data when the component mounts\n    fetchAnnouncements();\n  }, []);\n  const fetchAnnouncements = async () => {\n    try {\n      // Get secretaryId from localStorage\n      const secretaryId = localStorage.getItem('secretaryId');\n      if (!secretaryId) {\n        throw new Error('Secretary ID not found in local storage');\n      }\n      const response = await axios.post('http://localhost:9898/announcements', {\n        secretaryId\n      });\n      setAnnouncements(response.data);\n      setLoading(false);\n    } catch (error) {\n      setError(error);\n      setLoading(false);\n    }\n  };\n\n  // Function to format date\n  const formatDate = timestamp => {\n    const date = new Date(timestamp);\n    return date.toDateString(); // Return formatted date string\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"announcementTable-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"announcementTable-title\",\n      children: \"Announcements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"announcementTable-container\",\n      children: announcements.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No announcements available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"announcementTable-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Announcement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Created At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: announcements.map(announcement => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: announcement.announcement\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(announcement.created_at)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 41\n            }, this)]\n          }, announcement.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(AnnouncementsTable, \"EYja4nNLhcOlE9X0VganF6DbLxs=\");\n_c = AnnouncementsTable;\nexport default AnnouncementsTable;\nvar _c;\n$RefreshReg$(_c, \"AnnouncementsTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AnnouncementsTable","_s","announcements","setAnnouncements","loading","setLoading","error","setError","fetchAnnouncements","secretaryId","localStorage","getItem","Error","response","post","data","formatDate","timestamp","date","Date","toDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","length","map","announcement","created_at","id","_c","$RefreshReg$"],"sources":["/home/vedant/SYSTUM/project 2/Society Managemnt System/admin (2)/src/pages/table/announcementTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './announcementTable.css';\n\n\n\nconst AnnouncementsTable = () => {\n    const [announcements, setAnnouncements] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        // Fetch announcements data when the component mounts\n        fetchAnnouncements();\n    }, []);\n\n    const fetchAnnouncements = async () => {\n        try {\n            // Get secretaryId from localStorage\n            const secretaryId = localStorage.getItem('secretaryId');\n\n            if (!secretaryId) {\n                throw new Error('Secretary ID not found in local storage');\n            }\n\n            const response = await axios.post('http://localhost:9898/announcements', { secretaryId });\n            setAnnouncements(response.data);\n            setLoading(false);\n        } catch (error) {\n            setError(error);\n            setLoading(false);\n        }\n    };\n\n    // Function to format date\n    const formatDate = (timestamp) => {\n        const date = new Date(timestamp);\n        return date.toDateString(); // Return formatted date string\n    };\n\n    return (\n        <div className=\"announcementTable-card\">\n            <h2 className=\"announcementTable-title\">Announcements</h2>\n            {loading ? (\n                <div>Loading...</div>\n            ) : error ? (\n                <div>Error: {error.message}</div>\n            ) : (\n                <div className=\"announcementTable-container\">\n                    {announcements.length === 0 ? (\n                        <div>No announcements available.</div>\n                    ) : (\n                        <table className=\"announcementTable-table\">\n                            <thead>\n                                <tr>\n                                    <th>Announcement</th>\n                                    <th>Created At</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {announcements.map(announcement => (\n                                    <tr key={announcement.id}>\n                                        <td>{announcement.announcement}</td>\n                                        <td>{formatDate(announcement.created_at)}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default AnnouncementsTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}