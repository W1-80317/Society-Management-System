{"ast":null,"code":"var _jsxFileName = \"/home/vedant/SYSTUM/project 2/admin (2)/src/pages/login/login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './login.css'; // Importing CSS file for styling\nimport AdminLoginForm from './AdminLoginForm';\nimport SecretaryLoginForm from './SecretaryLoginForm';\nimport OwnerLoginForm from './OwnerLoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [role, setRole] = useState('');\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const handleRoleChange = e => {\n    setRole(e.target.value);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({\n      ...credentials,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Here you can perform your login logic based on the role\n    console.log('Role:', role);\n    console.log('Credentials:', credentials);\n    // Reset form fields\n    setRole('');\n    setCredentials({\n      email: '',\n      password: ''\n    });\n  };\n\n  // Render different JSX based on the selected role\n  let formComponent;\n  switch (role) {\n    case 'admin':\n      formComponent = /*#__PURE__*/_jsxDEV(AdminLoginForm, {\n        credentials: credentials,\n        handleInputChange: handleInputChange,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 23\n      }, this);\n      break;\n    case 'secretary':\n      formComponent = /*#__PURE__*/_jsxDEV(SecretaryLoginForm, {\n        credentials: credentials,\n        handleInputChange: handleInputChange,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 23\n      }, this);\n      break;\n    case 'owner':\n      formComponent = /*#__PURE__*/_jsxDEV(OwnerLoginForm, {\n        credentials: credentials,\n        handleInputChange: handleInputChange,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }, this);\n      break;\n    default:\n      formComponent = null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"role\",\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"role\",\n          value: role,\n          onChange: handleRoleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"secretary\",\n            children: \"Secretary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"owner\",\n            children: \"Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), formComponent, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"gt3OsQaAEqBOxX07x++F4CEboT0=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","AdminLoginForm","SecretaryLoginForm","OwnerLoginForm","jsxDEV","_jsxDEV","LoginForm","_s","role","setRole","credentials","setCredentials","email","password","handleRoleChange","e","target","value","handleInputChange","name","handleSubmit","preventDefault","console","log","formComponent","fileName","_jsxFileName","lineNumber","columnNumber","className","children","htmlFor","id","onChange","_c","$RefreshReg$"],"sources":["/home/vedant/SYSTUM/project 2/admin (2)/src/pages/login/login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './login.css'; // Importing CSS file for styling\nimport AdminLoginForm from './AdminLoginForm';\nimport SecretaryLoginForm from './SecretaryLoginForm';\nimport OwnerLoginForm from './OwnerLoginForm';\n\nconst LoginForm = () => {\n  const [role, setRole] = useState('');\n  const [credentials, setCredentials] = useState({ email: '', password: '' });\n\n  const handleRoleChange = (e) => {\n    setRole(e.target.value);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCredentials({ ...credentials, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Here you can perform your login logic based on the role\n    console.log('Role:', role);\n    console.log('Credentials:', credentials);\n    // Reset form fields\n    setRole('');\n    setCredentials({ email: '', password: '' });\n  };\n\n  // Render different JSX based on the selected role\n  let formComponent;\n  switch (role) {\n    case 'admin':\n      formComponent = <AdminLoginForm credentials={credentials} handleInputChange={handleInputChange} handleSubmit={handleSubmit} />;\n      break;\n    case 'secretary':\n      formComponent = <SecretaryLoginForm credentials={credentials} handleInputChange={handleInputChange} handleSubmit={handleSubmit} />;\n      break;\n    case 'owner':\n      formComponent = <OwnerLoginForm credentials={credentials} handleInputChange={handleInputChange} handleSubmit={handleSubmit} />;\n      break;\n    default:\n      formComponent = null;\n  }\n\n  return (\n    <div className=\"login-container\">\n      <form className=\"login-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"role\">Role:</label>\n          <select id=\"role\" value={role} onChange={handleRoleChange}>\n            <option value=\"\">Select Role</option>\n            <option value=\"admin\">Admin</option>\n            <option value=\"secretary\">Secretary</option>\n            <option value=\"owner\">Owner</option>\n          </select>\n        </div>\n        {formComponent} {/* Render different form component based on the selected role */}\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}